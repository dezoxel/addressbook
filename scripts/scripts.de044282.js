!function(a){"use strict";a.module("app",["app.addressbook"])}(angular),function(a){"use strict";a.module("app.core",["ngRoute","ngTouch"])}(angular),function(a){"use strict";a.module("app.addressbook",["app.core","app.addressbook.storage.local","app.addressbook.storage.mongolab"])}(angular),function(a){"use strict";a.module("app.addressbook").config(["EntryProvider",function(a){a.setAdapterName("MongoLabAdapter")}]).run(["Entry","PREDEFINED_LIST",function(a,b){a.setPredefinedList(b)}])}(angular),function(a){"use strict";a.module("app.addressbook").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/list.html",controller:"ListController as vm"}).when("/add",{templateUrl:"views/edit.html",controller:"EditController as vm"}).when("/edit/:id",{templateUrl:"views/edit.html",controller:"EditController as vm"}).otherwise({redirectTo:"/"})}])}(angular),function(a){"use strict";a.module("app.addressbook").controller("ListController",["Entry","$route",function(a,b){var c=this;c.init=function(){c.searchInput="",c.entries=[],c.fetchList()},c.fetchList=function(){return a.all().then(function(a){c.entries=a})},c["delete"]=function(a){a.$delete()["catch"](function(){console.error("Unable to delete entry")})["finally"](function(){b.reload()})},c.init()}])}(angular),function(a){"use strict";a.module("app.addressbook").controller("EditController",["Entry","$routeParams","$location",function(a,b,c){var d=this;d.init=function(){d.entry=new a,b.id&&d.fetchEntryBy(b.id)},d.fetchEntryBy=function(b){return a.find(b).then(function(a){d.entry=a})["catch"](function(){console.error('Unable to find entry with id "'+b+'"'),c.path("/")})},d.save=function(){return d.entry.$save()["catch"](function(){console.error("Unable to save entry")})["finally"](function(){c.path("/")})},d["delete"]=function(){return d.entry.$delete()["catch"](function(){console.error("Unable to delete entry")})["finally"](function(){c.path("/")})},d.init()}])}(angular),function(a){"use strict";a.module("app.addressbook").provider("Entry",function(){var a=null;this.setAdapterName=function(b){a=b},this.getAdapterName=function(){return a},this.$get=["$injector",function(b){if(!a)throw new Error("Entry: `adapterName` is not specified!");return b.get(a)}]})}(angular),function(a){"use strict";a.module("app.addressbook").constant("PREDEFINED_LIST",[{id:1,name:"Laura Morin",address:"P.O. Box 825, 7962 Ante, Ave"},{id:2,name:"Teegan Medina",address:"757-3869 Non St."},{id:3,name:"Nina Guy",address:"P.O. Box 241, 3444 Purus, Road"},{id:4,name:"Elmo Frazier",address:"4989 Proin Rd."},{id:5,name:"Nyssa Leonard",address:"387-6263 Pede. Av."},{id:6,name:"Dexter Christian",address:"967-8847 Vehicula Road"},{id:7,name:"Joan Reynolds",address:"285-1928 In St."},{id:8,name:"Audrey Gross",address:"7130 Suspendisse Street"},{id:9,name:"Keely Mendez",address:"P.O. Box 958, 9844 Nulla Rd."}])}(angular),function(a){"use strict";a.module("app.addressbook.storage.local",["LocalStorageModule"])}(angular),function(a){"use strict";a.module("app.addressbook.storage.local").config(["localStorageServiceProvider",function(a){a.setPrefix("addressbook")}])}(angular),function(a){"use strict";a.module("app.addressbook.storage.local").factory("LocalStorageAdapter",["localStorageService","$q",function(a,b){function c(a){a&&(this.id=a.id,this.name=a.name,this.address=a.address)}function d(){o=f(a.get("list")),m(o)&&(o=f(p),k())}function e(a){return JSON.stringify(a)}function f(a){var b=[];return a.forEach(function(a){b.push(new c(a))}),b}function g(a){return b(function(b,c){n(a)?(a.id=i(),o.push(a),k(),b(a)):c(new Error("Entry.add: Entry is not valid"))})}function h(a){return b(function(b,c){if(!n(a))return c(new Error("Entry.update: Entry is not valid"));var d=j(a.id);return-1===d?c(new Error('Unable to update entry by id: "'+a.id+'": Not found')):(o[d]=a,k(),void b(a))})}function i(){return o.length}function j(a){for(var b=parseInt(a),c=o.length;c--;)if(o[c].id===b)return c;return-1}function k(){a.set("list",e(o))}function l(a){o.splice(a,1)}function m(a){return!a||0===a.length}function n(a){var b=a.name&&"string"==typeof a.name&&""!==a.name,c=a.address&&"string"==typeof a.address&&""!==a.address;return b&&c}c.all=function(){return b(function(a){d(),a(o)})},c.find=function(a){return b(function(b,c){d();var e=j(a);-1===e?c(new Error("Entry.find("+a+"): Not found")):b(o[e])})},c.prototype.$save=function(){return this.isNew()?g(this):h(this)},c.prototype.$delete=function(){return b(function(a,b){var c=j(this.getId());-1===c?b(new Error("Unable to delete entry, not found by id: "+this.getId())):(l(c),k(),a())}.bind(this))},c.prototype.getId=function(){return this.id},c.prototype.isNew=function(){return!Boolean(this.getId())},c.setPredefinedList=function(a){p=a};var o=[],p=[];return c}])}(angular),function(a){"use strict";a.module("app.addressbook.storage.mongolab",["ngResource"])}(angular),function(a){"use strict";a.module("app.addressbook.storage.mongolab").constant("MONGOLAB_API_KEY","ERTrXTJMc7-ELVF_uFM008EerSToARVE")}(angular),function(a){"use strict";a.module("app.addressbook.storage.mongolab").factory("MongoLabAdapter",["$resource","MONGOLAB_API_KEY",function(a,b){var c=a("https://api.mongolab.com/api/1/databases/addressbook/collections/addressbook/:id",{apiKey:b,id:"@_id.$oid"},{update:{method:"PUT"}});c.all=function(){return c.query().$promise},c.find=function(a){return c.get({id:a}).$promise},c.setPredefinedList=function(a){d=a},c.prototype.getId=function(){return this._id?this._id.$oid:null},c.prototype._$create=c.prototype.$save,c.prototype.$save=function(){return this.isNew()?this._$create.apply(this,arguments):this.$update.apply(this,arguments)},c.prototype.isNew=function(){return!Boolean(this.getId())};var d=[];return c}])}(angular);